\contentsline {chapter}{Contents}{i}{section*.1}
\contentsline {chapter}{Preface}{1}{chapter*.5}
\contentsline {chapter}{\numberline {1}Motivation and Background}{3}{chapter.1}
\contentsline {paragraph}{If on a winter's night a programmer (with apologies to Italo Calvino)}{3}{section*.6}
\contentsline {section}{\numberline {1.1}Where are we}{4}{section.1.1}
\contentsline {subsection}{\numberline {1.1.1}The concurrency squeeze: from the hardware up, from the web down}{4}{subsection.1.1.1}
\contentsline {subsection}{\numberline {1.1.2}Ubiquity of robust, high-performance virtual machines}{5}{subsection.1.1.2}
\contentsline {subsection}{\numberline {1.1.3}Advances in functional programming, monads and the awkward squad}{6}{subsection.1.1.3}
\contentsline {section}{\numberline {1.2}Where are we going}{10}{section.1.2}
\contentsline {subsection}{\numberline {1.2.1}A functional web}{10}{subsection.1.2.1}
\contentsline {subsection}{\numberline {1.2.2}DSL-based design}{12}{subsection.1.2.2}
\contentsline {section}{\numberline {1.3}How are we going to get there}{13}{section.1.3}
\contentsline {subsection}{\numberline {1.3.1}Leading by example}{13}{subsection.1.3.1}
\contentsline {subsubsection}{Our toy language}{17}{section*.7}
\contentsline {paragraph}{Abstract syntax}{17}{section*.8}
\contentsline {paragraph}{A simple-minded representation}{17}{section*.9}
\contentsline {paragraph}{Type parametrization and quotation}{18}{section*.10}
\contentsline {paragraph}{Some syntactic sugar}{19}{section*.11}
\contentsline {paragraph}{Digression: complexity management principle}{20}{section*.12}
\contentsline {paragraph}{Concrete syntax}{20}{section*.13}
\contentsline {paragraph}{Translating concrete syntax to abstract syntax}{20}{section*.14}
\contentsline {paragraph}{Structural equivalence and Relations or What makes abstract syntax abstract}{23}{section*.15}
\contentsline {paragraph}{Digression: the internal structure of the type of variables}{27}{section*.16}
\contentsline {paragraph}{Evaluation -- aka operational semantics}{27}{section*.17}
\contentsline {subsubsection}{What goes into a language definition}{29}{section*.18}
\contentsline {paragraph}{Syntax}{30}{section*.19}
\contentsline {paragraph}{Structural equivalence}{30}{section*.20}
\contentsline {paragraph}{Operational semantics}{30}{section*.21}
\contentsline {paragraph}{Discussion}{30}{section*.22}
\contentsline {chapter}{\numberline {2}Toolbox}{31}{chapter.2}
\contentsline {section}{\numberline {2.1}Introduction to notation and terminology}{31}{section.2.1}
\contentsline {section}{\numberline {2.2}Introduction to core design patterns}{31}{section.2.2}
\contentsline {subsection}{\numberline {2.2.1}A little history}{31}{subsection.2.2.1}
\contentsline {paragraph}{Haskell's monad API}{32}{section*.23}
\contentsline {paragraph}{Do-notation}{32}{section*.24}
\contentsline {paragraph}{for-comprehensions}{33}{section*.25}
\contentsline {section}{\numberline {2.3}Variations in presentation}{36}{section.2.3}
\contentsline {subsection}{\numberline {2.3.1}A little more history}{36}{subsection.2.3.1}
\contentsline {subsubsection}{Intuition: Monad as container}{36}{section*.26}
\contentsline {paragraph}{Shape of the container}{36}{section*.27}
\contentsline {paragraph}{Putting things into the container}{36}{section*.28}
\contentsline {paragraph}{Flattening nested containers}{36}{section*.29}
\contentsline {subsubsection}{Preserving connection to existing structure: Monad as generalization of monoid}{37}{section*.30}
\contentsline {paragraph}{Associativity as flattening}{39}{section*.31}
\contentsline {paragraph}{Bracing for \texttt {XML}}{39}{section*.32}
\contentsline {paragraph}{The connection with set-comprehensions}{40}{section*.33}
\contentsline {paragraph}{Syntax and containers}{41}{section*.34}
\contentsline {subsubsection}{Decomposition of monad requirements}{41}{section*.35}
\contentsline {subsubsection}{A categorical way to look at monads}{42}{section*.36}
\contentsline {paragraph}{Quick digression about design by diagram-chasing}{43}{section*.37}
\contentsline {paragraph}{Monads are triples}{44}{section*.38}
\contentsline {chapter}{\numberline {3}An IO-monad for http streams}{47}{chapter.3}
\contentsline {section}{\numberline {3.1}Code first, questions later}{47}{section.3.1}
\contentsline {subsection}{\numberline {3.1.1}An HTTP-request processor}{54}{subsection.3.1.1}
\contentsline {subsection}{\numberline {3.1.2}What we did}{54}{subsection.3.1.2}
\contentsline {section}{\numberline {3.2}Synchrony, asynchrony and buffering}{54}{section.3.2}
\contentsline {section}{\numberline {3.3}State, statelessness and continuations}{54}{section.3.3}
\contentsline {chapter}{\numberline {4}Parsing requests, monadically}{55}{chapter.4}
\contentsline {section}{\numberline {4.1}Obligatory parsing monad}{55}{section.4.1}
\contentsline {section}{\numberline {4.2}Your parser combinators are showing}{55}{section.4.2}
\contentsline {section}{\numberline {4.3}EBNF and why higher levels of abstraction are better}{55}{section.4.3}
\contentsline {chapter}{\numberline {5}The domain model as abstract syntax}{57}{chapter.5}
\contentsline {section}{\numberline {5.1}Our abstract syntax}{57}{section.5.1}
\contentsline {section}{\numberline {5.2}Our application domain model}{57}{section.5.2}
\contentsline {section}{\numberline {5.3}A transform pipeline}{57}{section.5.3}
\contentsline {chapter}{\numberline {6}Zippers and contexts and URI's, oh my!}{59}{chapter.6}
\contentsline {section}{\numberline {6.1}Zippers are not just for Bruno anymore}{59}{section.6.1}
\contentsline {section}{\numberline {6.2}Constructing contexts and zippers from data types}{59}{section.6.2}
\contentsline {section}{\numberline {6.3}Mapping URIs to zipper-based paths and back}{59}{section.6.3}
\contentsline {chapter}{\numberline {7}A review of collections as monads}{61}{chapter.7}
\contentsline {section}{\numberline {7.1}Monad as container}{61}{section.7.1}
\contentsline {section}{\numberline {7.2}Monads and take-out}{61}{section.7.2}
\contentsline {chapter}{\numberline {8}Domain model, storage and state}{63}{chapter.8}
\contentsline {section}{\numberline {8.1}Mapping our domain model to storage}{63}{section.8.1}
\contentsline {section}{\numberline {8.2}Storage and language-integrated query}{63}{section.8.2}
\contentsline {section}{\numberline {8.3}Continuations revisited}{63}{section.8.3}
\contentsline {chapter}{\numberline {9}Putting it all together}{65}{chapter.9}
\contentsline {section}{\numberline {9.1}Our web application end-to-end}{65}{section.9.1}
\contentsline {section}{\numberline {9.2}Deploying our application}{65}{section.9.2}
\contentsline {subsection}{\numberline {9.2.1}Why we are not deploying on GAE}{65}{subsection.9.2.1}
\contentsline {section}{\numberline {9.3}From one web application to web framework}{65}{section.9.3}
\contentsline {chapter}{\numberline {10}The semantic web}{67}{chapter.10}
\contentsline {section}{\numberline {10.1}How our web framework enables different kinds of application queries}{67}{section.10.1}
\contentsline {section}{\numberline {10.2}Searching for programs}{67}{section.10.2}
\contentsline {subsection}{\numberline {10.2.1}A new foundation for search}{67}{subsection.10.2.1}
\contentsline {subsubsection}{Monad composition via distributive laws}{67}{section*.39}
\contentsline {subsection}{\numberline {10.2.2}Examples}{67}{subsection.10.2.2}
